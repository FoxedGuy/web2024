swagger: "2.0"
info:
  version: "0.0.1"
  title: Hello World App
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
paths:
  /hello:
    # binds a127 app logic to a route
    x-swagger-router-controller: hello_world
    get:
      description: Returns 'Hello' to the caller
      # used as the method name of the controller
      operationId: hello
      parameters:
        - name: name
          in: query
          description: The name of the person to whom to say hello
          required: false
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/HelloWorldResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users:
    x-swagger-router-controller: users
    get:
      description: Returns users
      operationId: getUsers
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new user
      operationId: createUser
      parameters:
        - name: user
          in: body
          description: The user to create
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/User"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /photos:
    x-swagger-router-controller: photos
    get:
      description: Returns photos
      operationId: getPhotos
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Image"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new photo
      operationId: createPhoto
      parameters:
        - name: photo
          in: body
          description: The photo to create
          required: true
          schema:
            $ref: "#/definitions/Image"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Image"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /galleries:
    x-swagger-router-controller: galleries
    get:
      description: Returns galleries
      operationId: getGalleries
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
              $ref: "#/definitions/Gallery"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      description: Creates a new gallery
      operationId: createGallery
      parameters:
        - name: gallery
          in: body
          description: The gallery to create
          required: true
          schema:
            $ref: "#/definitions/Gallery"
      responses:
        "200":
          description: Success
          schema:
            $ref: "#/definitions/Gallery"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  HelloWorldResponse:
    required:
      - message
    properties:
      message:
        type: string
  ErrorResponse:
    required:
      - message
    properties:
      message:
        type: string
  User:
    type: object
    required:
      - email
      - firstName
      - lastName
      - name
      - password
    properties:
      id:
        type: integer
        format: int64
      email:
          type: string
      firstName:
          type: string
      lastName:
          type: string
      name:
        type: string
      password:
          type: string
  Gallery:
    type: object
    required:
      - name
      - description
    properties:
      id:
        type: integer
        format: int64
      name:
        type: string
      description:
        type: string
      userId:
        type: integer
        format: int64
      images:
        type: array
        items:
          $ref: "#/definitions/Image"
  Image:
      type: object
      required:
          - title
          - url
          - filename
      properties:
          id:
            type: integer
            format: int64
          title:
            type: string
          url:
            type: string
          filename:
            type: string
          userId:
            type: integer
            format: int64